name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pages: write          # tylko dla joba 'pages'
  id-token: write       # tylko dla joba 'pages'

env:
  PYTHONUNBUFFERED: "1"
  MPLBACKEND: "Agg"     # bez X‑a, gdy coś użyje matplotliba

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
      - name: Install lint deps
        run: |
          python -m pip install -U pip wheel
          pip install ruff mypy
      - name: Ruff
        run: ruff check .
        continue-on-error: true
      - name: Mypy
        run: mypy .
        continue-on-error: true

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            tesseract-ocr imagemagick ffmpeg libgl1

      - name: Install Python deps
        run: |
          python -m pip install -U pip wheel
          pip install -e ".[dev,test]" || true
          pip install numpy moviepy pillow imageio imageio-ffmpeg 
          pip install opencv-python-headless PyYAML pytesseract librosa soundfile
          pip install pytest pytest-cov genbadge[all]

      - name: Smoke import
        run: |
          python - <<'PY'
          import sys
          import numpy, moviepy, PIL, imageio
          print("OK:", numpy.__version__, moviepy.__version__, PIL.__version__)
          PY

      - name: Diagnose env
        run: python tools/diagnose_env.py

      - name: Pytest (with coverage)
        run: |
          pytest -q \
            --junitxml=tests_report.xml \
            --cov=ken_burns_reel \
            --cov-report=xml \
            --cov-report=html

      - name: Generate coverage badge (SVG)
        if: success()   # tylko gdy testy przeszły
        run: genbadge coverage -i coverage.xml -o coverage-badge.svg

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            tests_report.xml
            coverage.xml
            htmlcov/
            coverage-badge.svg

      - name: Prepare site (KB + badge)
        if: success()
        run: |
          rm -rf site
          mkdir -p site
          if [ -d docs/KB ]; then cp -r docs/KB site/; fi
          cp coverage-badge.svg site/ || true

      - name: Upload site artifact
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  pages:
    needs: tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency:
      group: "pages"
      cancel-in-progress: true
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
